let Anim={init(t){this.paused=false;this.TAU=Math.PI*2},dispatch(t){let a=Anim,e;switch(t.type){case"start":a.cvs=t.canvas;a.ctx=a.cvs.getContext("2d",{willReadFrequently:true});a.width=a.cvs.width;a.height=a.cvs.height;a.focalX=a.width>>1;a.focalY=a.height*.2;a.dispatch({type:"create-scene"});break;case"pause":a.paused=true;break;case"resume":if(a.paused&&a.ctx){a.paused=false;a.draw()}break;case"create-scene":a.maxDepth=64;a.stars=[];let e=192;while(e--){a.stars.push({x:Utils.random(-25,25)|0,y:Utils.random(-25,25)|0,z:Utils.random(1,a.maxDepth)|0})}a.draw();break}},update(t){let a=t.width/2,e=t.height/2,s=t.stars,i=s.length;while(i--){s[i].z-=.015;if(s[i].z<=0){s[i].x=Utils.random(-25,25)|0;s[i].y=Utils.random(-25,25)|0;s[i].z=Utils.random(1,t.maxDepth)|0}}},draw(){let t=Anim,a=t.cvs,e=t.ctx,s=t.stars,i=s.length;t.update(t);let h=e.getImageData(0,0,t.width,t.height);for(let t=3,a=h.data.length;t<a;t+=4){h.data[t]=Math.floor(h.data[t]*.75)}e.putImageData(h,0,0);while(i--){k=64/s[i].z,px=s[i].x*k+t.focalX,py=s[i].y*k+t.focalY;if(px>=0&&px<=t.width&&py>=0&&py<=t.height){let a=1-s[i].z/48,h=Math.max(a,.1)+.3,l=255-Math.round(Math.abs(a*64));e.beginPath();e.fillStyle=`rgba(${l}, ${l}, ${l}, ${a})`;e.arc(px,py,h,0,t.TAU);e.fill()}}if(!t.paused)requestAnimationFrame(t.draw)}};Anim.init();self.onmessage=t=>Anim.dispatch(t.data);let Utils={random(t,a){return Math.random()*(a-t)+t},calculateDistance(t,a,e,s){let i=t-e,h=a-s;return Math.sqrt(i**2+h**2)}};